package DataDictionary.typesystem;

/*Generated by MPS */

import jetbrains.mps.errors.QuickFix_Runtime;
import jetbrains.mps.smodel.SNodePointer;
import org.jetbrains.mps.openapi.model.SNode;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SConceptOperations;
import jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SPropertyOperations;
import jetbrains.mps.internal.collections.runtime.ListSequence;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SLinkOperations;
import org.jetbrains.mps.openapi.language.SProperty;
import org.jetbrains.mps.openapi.language.SContainmentLink;

public class quick_fix_min_one_element_QuickFix extends QuickFix_Runtime {
  public quick_fix_min_one_element_QuickFix() {
    super(new SNodePointer("r:220831a1-1acb-4fbb-ba0f-68c947a9bb41(DataDictionary.typesystem)", "428207255362794501"));
  }
  public String getDescription(SNode node) {
    return "Quick Fix automatically add field in empty structure";
  }
  public void execute(SNode node) {
    SNode field = SConceptOperations.createNewNode(MetaAdapterFactory.getConcept(0xb7df9610c91c472eL, 0xb4856407763b5456L, 0x13db5904c2c0bfe2L, "DataDictionary.structure.Field"));
    SPropertyOperations.assign(field, PROPS.name$MnvL, "Field-1");
    ListSequence.fromList(SLinkOperations.getChildren(((SNode) quick_fix_min_one_element_QuickFix.this.getField("structure")[0]), LINKS.elements$3FNB)).addElement(field);
  }

  private static final class PROPS {
    /*package*/ static final SProperty name$MnvL = MetaAdapterFactory.getProperty(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L, 0x110396ec041L, "name");
  }

  private static final class LINKS {
    /*package*/ static final SContainmentLink elements$3FNB = MetaAdapterFactory.getContainmentLink(0xb7df9610c91c472eL, 0xb4856407763b5456L, 0x13db5904c2c0bfbdL, 0x13db5904c2c0bfc0L, "elements");
  }
}
